#################################################
# OPTIONS FOR THE UNDERLYING NETWORK CONNECTION #
#################################################

#  -c <community>, --community=<community>
#         sets the n2n community name (see also N2N_COMMUNITY in ENVIRONMENT). All edges within the same community  ap‐
#         pear  on  the  same LAN (layer 2 network segment).  Community name is 16 bytes in length. A name smaller than
#         this is padded with 0x00 bytes and a name longer than this is truncated to take the first 16 bytes.
#--community=

#  -l <host:port>, --supernode-list=<host:port>
#         sets the n2n supernode IP address and port to register to. Multiple supernodes can be specified.
#--supernode-list=

#  -p [<local_ip_address>:]<local_port>
#         binds edge to the given UDP port. Useful for keeping the same external socket across restarts of  edge.  This
#         allows  peer  edges which know the edge socket to continue p2p operation without going back to the supernode.
#         Also, home router's port forwarding feature can refer to that fixed port.  Optionally, the edge can  bind  to
#         the  provided local ip address only. This is useful in case restriction to a certain LAN or WiFi interface is
#         desired.  By default, the edge binds to any interface.
#-p

#  -D     enable PMTU discovery, it can reduce fragmentation but causes connections to stall if not properly supported
#-D

#  -e <local_ip_address>
#         advertises the provided local IP address as preferred, useful if multicast peer detection is  not  available,
#         e.g.  disabled on routers. -e auto tries auto-detection of local IP address.
#-e

#  -S1 ... -S2
#         do not connect p2p, always use the supernode, -S1 = via UDP, -S2 = via TCP
#-S1
#-S2

#  -i <reg_interval>
#         Supernode  registration  interval.  It  specifies  the interval in seconds between consecutive REGISTER_SUPER
#         packets and it's used to keep NAT hole open via the UDP NAT hole punching  technique.  This  only  works  for
#         asymmetric NATs and allows for P2P communication.
#-i

#  -L <reg_ttl>
#         set  the TTL for the hole punching packet. This is an advanced flag to make sure that the registration packet
#         is dropped immediately when it goes out of local nat so that it will not trigger some  firewall  behavior  on
#         target  peer.   Actually,  the registration packet is only expected to make local nat UDP hole and is not ex‐
#         pected to reach the target peer, see https://tools.ietf.org/html/rfc5389. To achieve this, the flag should be
#         set as nat level + 1. For example, if we have 2 layer nat in local, we should set -L 3.  Usually we know  ex‐
#         actly  how  much nat layers in local.  If we are not sure how much nat layers in local, we can use traceroute
#         on Linux to check. The following example shows a local single layer nat because on second  jump  it  shows  a
#         public ip address. In this case it should set -L 2.
#
#         $ /usr/sbin/traceroute -w1 8.8.8.8
#         traceroute to 8.8.8.8 (8.8.8.8), 30 hops max, 60 byte packets
#          1  192.168.3.1 (192.168.3.1)  0.464 ms  0.587 ms  0.719 ms
#          2  112.65.17.217 (112.65.17.217)  5.269 ms  7.031 ms  8.666 ms
#
#         But this method does not always work due to various local network device policy.
#-L

#  -k <key>
#         encryption  key (ASCII) - also N2N_KEY=<key> -k <keystring> sets the encryption key from ASCII text (see also
#         N2N_KEY in ENVIRONMENT). All edges communicating must use the same key and community name. If -k  not  speci‐
#         fied then edge uses cleartext mode (no encryption).
#-k

#  -A1    disable payload encryption, do not use with key, defaults to AES then
#-A1

#  -A2 ... -A5
#         choose  a  cipher for payload encryption, requires a key, -A2 = Twofish, -A3 = AES (default if key provided),
#         -A4 = ChaCha20, -A5 = Speck-CTR
#-A2
#-A3
#-A4
#-A5

#  -H     use header encryption, supernode needs fixed community
#-H

#  -z1 ... -z2
#         compress outgoing data packets, -z1 = lzo1x, disabled by default
#-z1
#-z2

#  --select-rtt
#         select supernode by round trip time if several to choose from (federation), defaults to load-based  selection
#         strategy if not provided.
#--select-rtt

#  --select-mac
#         select supernode by MAC address if several to choose from (federation), lowest MAC address first.
#--select-mac


#################################################
# TAP DEVICE AND OVERLAY NETWORK CONFIGURATION  #
#################################################

#  -a [mode]<ip>[/n]
#         interface  address  and  optional  CIDR  subnet,  default  '/24',  mode = [static|dhcp]:, for DHCP use '-r -a
#         dhcp:0.0.0.0', edge draws IP address from supernode if no '-a ...' given
#-a

#  -m <mac>
#         start the TAP interface with the given MAC address. This is highly recommended as it means the  same  address
#         will  be  used if edge stops and restarts. If this is not done, the ARP caches of all peers will be wrong and
#         packets will not flow to this edge until the next ARP refresh.  e.g.  '-m 10:20:30:40:50:60',  by  default  a
#         random MAC address is used.
#-m

#  -d <device>, --device=<device>
#         TAP device name
#--device=

#  -M <mtu>
#         specify n2n MTU of TAP interface, default 1290
#-M

#  -r     enable  IP  packet  forwarding/routing  through the n2n virtual LAN. Without this option, IP packets arriving
#         over n2n are dropped if not for the -a <addr> (or DHCP assigned) IP address of the edge interface.  This  op‐
#         tion is also required to allow n2n device being used in network bridging, e.g. with brctl.
#-r

#  -E     accept  packets destined for multicast ethernet MAC addresses. These addresses are used in multicast ethernet
#         and IPv6 neighbour discovery. If this option is not present these multicast packets  are  discarded  as  most
#         users do not need or understand them.
#-E

#  -I <description>
#         annotate the edge's description used for easier identification in management port output or username
#-I

#  -J <password>
#         password for user-password edge authentication (see also N2N_PASSWORD in ENVIRONMENT)
#-J

#  -P <public key>
#         federation public key for user-password authentication
#-P

#  -R <rule_str>
#         Add  rule  to  drop  or accept specific packet transmit over edge network interface.  -R rule_str can be used
#         multiple times to add multiple rules. Each -R rule_str add one rule.
#
#         rule_str format:"src_ip/len:[b_port,e_port],dst_ip/len:[s_port,e_port],TCP+/-,UDP+/-,ICMP+/-".
#
#         ip/len indicate a cidr block, len can be ignore, means single ip(not cidr block) will be use in filter rule.
#
#         +,- after TCP,UDP,ICMP proto type indicate allow or drop packet of that proto.  if any of above  three  proto
#         missed, the rule will not take effect for that proto.
#
#         Ports  range  [s_port,e_port]  can  be instead by single port number. If not specify, [0,65535] will be used.
#         Ports range include start_port and end_port. If multiple rules matching packet's ips and ports, the rule with
#         smaller cidr block(smaller address space) will be selected. That means rules with larger len value has higher
#         priority.
#
#         Packets that cannot match any rule will be accepted by default. Users can add rules to block  traffics.  This
#         behavior can be change by add the rule : ‘0.0.0.0/0:[0,65535],0.0.0.0/0: [0,65535],TCP-,UDP-,ICMP-‘. Then all
#         traffic will be dropped, users need add rules to allow traffics.
#
#         for example : ‘-R 0.0.0.0/0,0.0.0.0/0,TCP-,UDP-,ICMP- -R 192.168.100.0/24,192.168.100.0/24,ICMP+‘,
#-R

#  -x <metric>
#         set TAP interface metric, defaults to 0 (auto), e.g. set to 1 for better multiplayer game detection.
#         (Windows only)
#-x


#################################################
# LOCAL OPTIONS                                 #
#################################################

#  -t <port>
#         binds  the  edge  management system to the given UDP port. Default 5644. Use this if you need to run multiple
#         instance of edge; or something is bound to that port.
#-t

#  --management-password <password>
#         sets the password for access to JSON API at the management port, defaults to 'n2n'. The password  has  to  be
#         provided  when  using  'scripts/n2n-ctl', 'scripts/n2n-httpd' or for any other relevant access to JSON API at
#         the management port.
#--management-password

#  -v, --verbose
#         make more verbose, repeat as required
#--verbose

#  -V     make less verbose, repeat as required
#-V
